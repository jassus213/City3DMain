using Buildings;using UnityEngine;using Zenject;public class DestroyPresenter : IDestroyPresenter, IInitializable, ITickable{    private readonly SignalBus _signalBus;    private readonly IDestoryView _destoryView;    private bool _isActive = false;    public DestroyPresenter(IDestoryView destoryView, SignalBus signalBus)    {        _destoryView = destoryView;        _signalBus = signalBus;    }        private void GetGameObject()    {        var gameObject = RayCastToGameObject().GetComponent<IRemovable>();        if(gameObject != null)        {            gameObject.Remove();            _signalBus.Fire<GameSceneSignals.OnDestoyClick>(new GameSceneSignals.OnDestoyClick{ HouseName = "test" });        }    }    public void Initialize()    {        _destoryView.SetPresenter(this);    }    private GameObject RayCastToGameObject()    {        var ray = Camera.main.ScreenPointToRay(Input.mousePosition);        Physics.Raycast(ray, out RaycastHit hitInfo);        Debug.Log(hitInfo.transform.gameObject.layer);        return hitInfo.transform.gameObject;    }    public void StartDestroyMode()    {        _isActive = !_isActive;    }        public void Tick()    {        if(!_isActive)            return;                if (Input.GetMouseButton(0))        {            GetGameObject();        }    }}